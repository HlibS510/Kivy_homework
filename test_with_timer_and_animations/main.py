
from kivy.app import App
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.button import Button
from kivy.uix.textinput import TextInput
from instructions import txt_instruction, txt_test1, txt_test3, txt_sits
from ruffier import test
from seconds import Seconds

from kivy.core.window import Window  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
from sits import Sits  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
from runner import Runner  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è


theme = 0
# btn_background_normal = "images/img.png"  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
# btn_background_down = "images/down.png"  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è


age = 7
name = ""
p1, p2, p3 = 0, 0, 0


def check_int(str_num):
    # –ø–æ–≤–µ—Ä—Ç–∞—î —á–∏—Å–ª–æ –∞–±–æ False, —è–∫—â–æ —Ä—è–¥–æ–∫ –Ω–µ –∫–æ–Ω–≤–µ—Ä—Ç—É—î—Ç—å—Å—è
    try:
        return int(str_num)
    except:
        return False


# –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω —ñ–∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è–º —ñ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è–º
# –≤–≤–æ–¥–∏–º–æ —ñ–º'—è –≤—ñ–∫
class InstrScr(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)

        self.instr = Label(text=txt_instruction, color="#CBBFBB")
        self.lbl1 = Label(text="–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è:", halign="right", color="#CBBFBB")
        self.in_name = TextInput(multiline=False)
        self.lbl2 = Label(text="–í–≤–µ–¥—ñ—Ç—å –≤—ñ–∫:", halign="right", color="#CBBFBB")
        self.in_age = TextInput(multiline=False)
        self.btn = Button(
            text="–ü–æ—á–∞—Ç–∏", size_hint=(0.3, 0.2), pos_hint={"center_x": 0.5}
        )
        self.btn_theme = Button(
            text="—Å–≤—ñ—Ç–ª–∏–π —Ñ–æ–Ω", size_hint=(0.3, 0.2), pos_hint={"center_x": 0.5}
        )

        self.btn.on_press = self.next
        self.btn_theme.on_press = self.next_theme

        self.line1 = BoxLayout(size_hint=(0.8, None), height="30sp")
        self.line2 = BoxLayout(size_hint=(0.8, None), height="30sp")
        self.line1.add_widget(self.lbl1)
        self.line1.add_widget(self.in_name)
        self.line2.add_widget(self.lbl2)
        self.line2.add_widget(self.in_age)
        self.outer = BoxLayout(orientation="vertical", padding=8, spacing=8)
        self.outer.add_widget(self.instr)
        self.outer.add_widget(self.line1)
        self.outer.add_widget(self.line2)
        self.outer.add_widget(self.btn)
        self.outer.add_widget(self.btn_theme)
        self.add_widget(self.outer)

        self.set_style()

    def next(self):
        global name, age
        name = self.in_name.text
        age = check_int(self.in_age.text)
        if age == False or age < 7:
            age = 7

        else:
            self.manager.current = "pulse1"

    def next_theme(self):
        global theme

        if theme == 1:
            theme = 0
        else:
            theme = 1
        self.set_style()

    def set_style(self):
        if theme == 0:
            Window.clearcolor = "#493843"  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.btn_color = "#8A7C7F"
            self.btn_color_presed = "#AB9E9D"
            self.instr.color = self.lbl1.color = self.lbl2.color = "#CBBFBB"
        else:
            Window.clearcolor = "#CBBFBB"  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.btn_color = "#CBBFBB"
            self.btn_color_presed = "#493843"
            self.instr.color = self.lbl1.color = self.lbl2.color = "#493843"

        self.btn.background_color = self.btn_color  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
        self.btn.background_down = self.btn_color_presed  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
        self.btn_theme.background_color = self.btn_color  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
        self.btn_theme.background_down = self.btn_color_presed  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è

# –≤–≤–µ–¥–µ–Ω–Ω—è –ø—É–ª—å—Å—É —É —Å–ø–æ–∫—ñ–π–Ω–æ–º—É —Å—Ç–∞–Ω—ñ
class PulseScr(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        if theme == 0:
            Window.clearcolor = "#493843"  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.btn_color = "#8A7C7F"
            self.btn_color_presed = "#AB9E9D"
            self.next_screen = False
            self.lbl_sec = Seconds(15)
            self.lbl_sec.bind(done=self.sec_finished)

            self.instr = Label(text=txt_test1, color="#CBBFBB")

            self.line = BoxLayout(size_hint=(0.8, None), height="30sp")
            self.lbl_result = Label(text="–í–≤–µ–¥—ñ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç:", halign="right", color="#CBBFBB")
            self.in_result = TextInput(multiline=False)
            self.in_result.set_disabled(True)

            self.line.add_widget(self.lbl_result)
            self.line.add_widget(self.in_result)
            self.btn = Button(
                text="–ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Ç–∞–π–º–µ—Ä", size_hint=(0.3, 0.2), pos_hint={"center_x": 0.5}
            )
        else:
            Window.clearcolor = "#CBBFBB"
            self.btn_color = "#CBBFBB"
            self.btn_color_presed = "#8A7C7F"
            self.next_screen = False
            self.lbl_sec = Seconds(15)
            self.lbl_sec.bind(done=self.sec_finished)

            self.instr = Label(text=txt_test1, color="#493843")

            self.line = BoxLayout(size_hint=(0.8, None), height="30sp")
            self.lbl_result = Label(text="–í–≤–µ–¥—ñ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç:", halign="right", color="#493843")
            self.in_result = TextInput(multiline=False)
            self.in_result.set_disabled(True)

            self.line.add_widget(self.lbl_result)
            self.line.add_widget(self.in_result)
            self.btn = Button(
                text="–ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Ç–∞–π–º–µ—Ä", size_hint=(0.3, 0.2), pos_hint={"center_x": 0.5}
            )
        self.btn.background_color = self.btn_color  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
        self.btn.background_down = self.btn_color_presed  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
        self.btn.on_press = self.next
        self.outer = BoxLayout(orientation="vertical", padding=8, spacing=8)
        self.outer.add_widget(self.instr)
        self.outer.add_widget(self.lbl_sec)
        self.outer.add_widget(self.line)
        self.outer.add_widget(self.btn)
        self.add_widget(self.outer)

    # —è–∫—â–æ –¥–æ—Ä–∞—Ö—É–≤–∞–ª–∏—Å—è —Å–µ–∫—É–Ω–¥–∏, —Ç–æ —Ç—Ä–µ–±–∞ —Ä–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏ –≤—Å–µ
    def sec_finished(self, *args):
        self.next_screen = True
        self.in_result.set_disabled(False)
        self.btn.set_disabled(False)
        self.btn.text = "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏"

    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.lbl_sec.start()
        else:
            global p1
            p1 = check_int(self.in_result.text)
            if p1 == False or p1 <= 0:
                p1 = 0
                self.in_result.text = str(p1)
            else:
                self.manager.current = "sits"


# –ø—Ä–∏—Å—ñ–¥–∞—î–º–æ
class CheckSits(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        if theme == 0:
            Window.clearcolor = "#493843"  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.btn_color = "#8A7C7F"
            self.btn_color_presed = "#AB9E9D"
            self.next_screen = False  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.instr = Label(text=txt_sits, color="#CBBFBB")

            self.lbl_sits = Sits(30)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.run = Runner(total=30, steptime=1.5, size_hint=(0.4, 1))  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.run.bind(finished=self.run_finished)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è

            self.line = BoxLayout()  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.vlay = BoxLayout(orientation='vertical', size_hint=(0.3, 1))  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.vlay.add_widget(self.lbl_sits)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.line.add_widget(self.instr)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.line.add_widget(self.vlay)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.line.add_widget(self.run)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è

            self.btn = Button(
                text="–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏", size_hint=(0.3, 0.2), pos_hint={"center_x": 0.5}
            )
        else:
            Window.clearcolor = "#CBBFBB"  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.btn_color = "#CBBFBB"
            self.btn_color_presed = "#8A7C7F"
            self.next_screen = False  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.instr = Label(text=txt_sits, color="#493843")

            self.lbl_sits = Sits(30)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.run = Runner(total=30, steptime=1.5, size_hint=(0.4, 1))  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.run.bind(finished=self.run_finished)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è

            self.line = BoxLayout()  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.vlay = BoxLayout(orientation='vertical', size_hint=(0.3, 1))  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.vlay.add_widget(self.lbl_sits)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.line.add_widget(self.instr)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.line.add_widget(self.vlay)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.line.add_widget(self.run)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è

            self.btn = Button(
                text="–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏", size_hint=(0.3, 0.2), pos_hint={"center_x": 0.5}
            )
        self.btn.background_color = self.btn_color  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
        self.btn.background_down = self.btn_color_presed
        self.btn.on_press = self.next
        self.outer = BoxLayout(orientation="vertical", padding=8, spacing=8)
        # self.outer.add_widget(self.instr)  # ‚ùå‚ùå‚ùå
        self.outer.add_widget(self.line)  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
        self.outer.add_widget(self.btn)
        self.add_widget(self.outer)

    def run_finished(self, instance, value):  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
        self.btn.set_disabled(False)
        self.btn.text = "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏"
        self.next_screen = True

    def next(self):  # üîÅüîÅüîÅ
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.run.start()
            self.run.bind(value=self.lbl_sits.next)
        else:
            self.manager.current = "pulse2"


# –¥–≤—ñ—á—ñ –≤–≤–æ–¥–∏–º–æ –ø—É–ª—å—Å
class PulseScr2(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        if theme == 0:
            Window.clearcolor = "#493843"  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.btn_color = "#8A7C7F"
            self.btn_color_presed = "#AB9E9D"
            self.next_screen = False
            self.stage = 0

            self.instr = Label(text=txt_test3, color="#CBBFBB")

            self.lbl_sec = Seconds(15)
            self.lbl_sec.bind(done=self.sec_finished)
            self.lbl1 = Label(text="–†–∞—Ö—É–π—Ç–µ –ø—É–ª—å—Å")

            self.line1 = BoxLayout(size_hint=(0.8, None), height="30sp")
            self.lbl_result1 = Label(text="–†–µ–∑—É–ª—å—Ç–∞—Ç:", halign="right", color="#CBBFBB")
            self.in_result1 = TextInput(multiline=False)
            self.in_result1.set_disabled(True)

            self.line1.add_widget(self.lbl_result1)
            self.line1.add_widget(self.in_result1)
            self.line2 = BoxLayout(size_hint=(0.8, None), height="30sp")
            self.lbl_result2 = Label(text="–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ—Å–ª—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É:", halign="right", color="#CBBFBB")
            self.in_result2 = TextInput(multiline=False)
            self.in_result2.set_disabled(True)

            self.line2.add_widget(self.lbl_result2)
            self.line2.add_widget(self.in_result2)
            self.btn = Button(
                text="–ó–∞–≤–µ—Ä—à–∏—Ç–∏", size_hint=(0.3, 0.2), pos_hint={"center_x": 0.5}
            )
        else:
            Window.clearcolor = "#CBBFBB"  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
            self.btn_color = "#CBBFBB"
            self.btn_color_presed = "#8A7C7F"
            self.next_screen = False
            self.stage = 0

            self.instr = Label(text=txt_test3, color="#493843")

            self.lbl_sec = Seconds(15)
            self.lbl_sec.bind(done=self.sec_finished)
            self.lbl1 = Label(text="–†–∞—Ö—É–π—Ç–µ –ø—É–ª—å—Å")

            self.line1 = BoxLayout(size_hint=(0.8, None), height="30sp")
            self.lbl_result1 = Label(text="–†–µ–∑—É–ª—å—Ç–∞—Ç:", halign="right", color="#493843")
            self.in_result1 = TextInput(multiline=False)
            self.in_result1.set_disabled(True)

            self.line1.add_widget(self.lbl_result1)
            self.line1.add_widget(self.in_result1)
            self.line2 = BoxLayout(size_hint=(0.8, None), height="30sp")
            self.lbl_result2 = Label(text="–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ—Å–ª—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É:", halign="right", color="#493843")
            self.in_result2 = TextInput(multiline=False)
            self.in_result2.set_disabled(True)

            self.line2.add_widget(self.lbl_result2)
            self.line2.add_widget(self.in_result2)
            self.btn = Button(
                text="–ó–∞–≤–µ—Ä—à–∏—Ç–∏", size_hint=(0.3, 0.2), pos_hint={"center_x": 0.5}
            )
        self.btn.background_color = self.btn_color  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
        self.btn.background_down = self.btn_color_presed  # ‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è
        self.btn.on_press = self.next
        self.outer = BoxLayout(orientation="vertical", padding=8, spacing=8)
        self.outer.add_widget(self.instr)
        self.outer.add_widget(self.lbl1)
        self.outer.add_widget(self.lbl_sec)
        self.outer.add_widget(self.line1)
        self.outer.add_widget(self.line2)
        self.outer.add_widget(self.btn)
        self.add_widget(self.outer)

    def sec_finished(self, *args):
        if self.lbl_sec.done:
            if self.stage == 0:
                # –∑–∞–∫—ñ–Ω—á–∏–ª–∏ –ø–µ—Ä—à–∏–π –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫, –≤—ñ–¥–ø–æ—á–∏–≤–∞—î–º–æ
                self.lbl1.text = "–í—ñ–¥—á–∏–≤–∞–π—Ç–µ"
                self.lbl_sec.restart(30)
                self.in_result1.set_disabled(False)
                self.stage = 1
            elif self.stage == 1:
                # –∑–∞–∫—ñ–Ω—á–∏–ª–∏ –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫, –≤–≤–∞–∂–∞—î–º–æ
                self.lbl1.text = "–†–∞—Ö—É–π—Ç–µ –ø—É–ª—å—Å"
                self.lbl_sec.restart(15)
                self.stage = 2

            elif self.stage == 2:
                self.in_result2.set_disabled(False)
                self.btn.set_disabled(False)
                self.btn.text = "–ó–∞–≤–µ—Ä—à–∏—Ç–∏"
                self.next_screen = True

    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.lbl_sec.start()
        else:
            global p2, p3
            p2 = check_int(self.in_result1.text)
            p3 = check_int(self.in_result2.text)
            if p2 == False:
                p2 = 0
                self.in_result1.text = str(p2)
            elif p3 == False:
                p3 = 0
                self.in_result2.text = str(p3)
            else:
                # –ø–µ—Ä–µ—Ö–æ–¥–∏–º
                self.manager.current = "result"


# —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
class Result(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.outer = BoxLayout(orientation="vertical", padding=8, spacing=8)
        self.instr = Label(text="")
        self.outer.add_widget(self.instr)
        self.add_widget(self.outer)
        self.on_enter = self.before

    def before(self):
        global name
        self.instr.text = name + "\n" + test(p1, p2, p3, age)


class HeartCheck(App):
    def build(self):
        sm = ScreenManager()
        sm.add_widget(InstrScr(name="instr"))
        sm.add_widget(PulseScr(name="pulse1"))
        sm.add_widget(CheckSits(name="sits"))
        sm.add_widget(PulseScr2(name="pulse2"))
        sm.add_widget(Result(name="result"))
        return sm


app = HeartCheck()
app.run()
